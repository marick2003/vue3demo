{"remainingRequest":"D:\\vue3demo\\node_modules\\babel-loader\\lib\\index.js!D:\\vue3demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue3demo\\src\\views\\P5.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue3demo\\src\\views\\P5.vue","mtime":1538365013809},{"path":"D:\\vue3demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536120880892},{"path":"D:\\vue3demo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\vue3demo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\nimport VueP5 from \"vue-p5\";\nexport default {\n  name: \"p5-example\",\n  components: {\n    \"vue-p5\": VueP5\n  },\n  data: function data() {\n    return {\n      red: 255,\n      green: 0,\n      blue: 0,\n      lines: [],\n      backgroundImage: null\n    };\n  },\n  methods: {\n    sketch: function sketch(_sketch) {\n      var _this = this;\n\n      _sketch.draw = function () {\n        _this.blue = (_this.blue + 3) % 255;\n        var red = _this.red,\n            green = _this.green,\n            blue = _this.blue;\n\n        _sketch.background(red, green, blue);\n      };\n    },\n    preload: function preload(sketch) {\n      this.backgroundImage = sketch.loadImage(\"../../assets/logo.png\");\n    },\n    setup: function setup(sketch) {\n      sketch.createCanvas(400, 400);\n    },\n    draw: function draw(sketch) {\n      var width = sketch.width,\n          height = sketch.height;\n      sketch.image(this.backgroundImage, 0, 0, 0.5 * width, 0.5 * height);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.lines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var line = _step.value;\n          sketch.stroke(line.color);\n          sketch.line(line.pmouseX, line.pmouseY, line.mouseX, line.mouseY);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    keyPressed: function keyPressed(_ref) {\n      var keyCode = _ref.keyCode;\n\n      // 'g' key\n      if (keyCode === 71) {\n        this.toggleGreen();\n      }\n    },\n    mouseMoved: function mouseMoved(_ref2) {\n      var mouseX = _ref2.mouseX,\n          mouseY = _ref2.mouseY,\n          pmouseX = _ref2.pmouseX,\n          pmouseY = _ref2.pmouseY;\n      this.pushLine({\n        mouseX: mouseX,\n        mouseY: mouseY,\n        pmouseX: pmouseX,\n        pmouseY: pmouseY,\n        color: 0\n      });\n    },\n    mouseDragged: function mouseDragged(_ref3) {\n      var mouseX = _ref3.mouseX,\n          mouseY = _ref3.mouseY,\n          pmouseX = _ref3.pmouseX,\n          pmouseY = _ref3.pmouseY;\n      this.pushLine({\n        mouseX: mouseX,\n        mouseY: mouseY,\n        pmouseX: pmouseX,\n        pmouseY: pmouseY,\n        color: 255\n      });\n    },\n    toggleRed: function toggleRed() {\n      this.red = 255 - this.red;\n    },\n    toggleGreen: function toggleGreen() {\n      this.green = 255 - this.green;\n    },\n    pushLine: function pushLine(line) {\n      var lines = this.lines;\n      lines.push(line);\n      this.lines = lines.slice(-100);\n    }\n  }\n};",{"version":3,"sources":["P5.vue"],"names":[],"mappings":";;;;;;;;;;;;AAOA,OAAA,KAAA,MAAA,QAAA;AACA,eAAA;AACA,QAAA,YADA;AAEA,cAAA;AACA,cAAA;AADA,GAFA;AAKA,QAAA;AAAA,WAAA;AACA,WAAA,GADA;AAEA,aAAA,CAFA;AAGA,YAAA,CAHA;AAIA,aAAA,EAJA;AAKA,uBAAA;AALA,KAAA;AAAA,GALA;AAYA,WAAA;AACA,UADA,kBACA,OADA,EACA;AAAA;;AACA,cAAA,IAAA,GAAA,YAAA;AACA,cAAA,IAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,IAAA,GAAA;AADA,YAEA,GAFA,GAEA,KAFA,CAEA,GAFA;AAAA,YAEA,KAFA,GAEA,KAFA,CAEA,KAFA;AAAA,YAEA,IAFA,GAEA,KAFA,CAEA,IAFA;;AAGA,gBAAA,UAAA,CAAA,GAAA,EAAA,KAAA,EAAA,IAAA;AACA,OAJA;AAKA,KAPA;AAQA,WARA,mBAQA,MARA,EAQA;AACA,WAAA,eAAA,GAAA,OAAA,SAAA,CAAA,uBAAA,CAAA;AACA,KAVA;AAWA,SAXA,iBAWA,MAXA,EAWA;AACA,aAAA,YAAA,CAAA,GAAA,EAAA,GAAA;AACA,KAbA;AAcA,QAdA,gBAcA,MAdA,EAcA;AAAA,UACA,KADA,GACA,MADA,CACA,KADA;AAAA,UACA,MADA,GACA,MADA,CACA,MADA;AAEA,aAAA,KAAA,CAAA,KAAA,eAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,KAAA,EAAA,MAAA,MAAA;AAFA;AAAA;AAAA;;AAAA;AAGA,6BAAA,KAAA,KAAA,8HAAA;AAAA,cAAA,IAAA;AACA,iBAAA,MAAA,CAAA,KAAA,KAAA;AACA,iBAAA,IAAA,CAAA,KAAA,OAAA,EAAA,KAAA,OAAA,EAAA,KAAA,MAAA,EAAA,KAAA,MAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KArBA;AAsBA,cAtBA,4BAsBA;AAAA,UAAA,OAAA,QAAA,OAAA;;AACA;AACA,UAAA,YAAA,EAAA,EAAA;AACA,aAAA,WAAA;AACA;AACA,KA3BA;AA4BA,cA5BA,6BA4BA;AAAA,UAAA,MAAA,SAAA,MAAA;AAAA,UAAA,MAAA,SAAA,MAAA;AAAA,UAAA,OAAA,SAAA,OAAA;AAAA,UAAA,OAAA,SAAA,OAAA;AACA,WAAA,QAAA,CAAA;AAAA,sBAAA;AAAA,sBAAA;AAAA,wBAAA;AAAA,wBAAA;AAAA,eAAA;AAAA,OAAA;AACA,KA9BA;AA+BA,gBA/BA,+BA+BA;AAAA,UAAA,MAAA,SAAA,MAAA;AAAA,UAAA,MAAA,SAAA,MAAA;AAAA,UAAA,OAAA,SAAA,OAAA;AAAA,UAAA,OAAA,SAAA,OAAA;AACA,WAAA,QAAA,CAAA;AAAA,sBAAA;AAAA,sBAAA;AAAA,wBAAA;AAAA,wBAAA;AAAA,eAAA;AAAA,OAAA;AACA,KAjCA;AAkCA,aAlCA,uBAkCA;AACA,WAAA,GAAA,GAAA,MAAA,KAAA,GAAA;AACA,KApCA;AAqCA,eArCA,yBAqCA;AACA,WAAA,KAAA,GAAA,MAAA,KAAA,KAAA;AACA,KAvCA;AAwCA,YAxCA,oBAwCA,IAxCA,EAwCA;AACA,UAAA,QAAA,KAAA,KAAA;AACA,YAAA,IAAA,CAAA,IAAA;AACA,WAAA,KAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,CAAA;AACA;AA5CA;AAZA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n      <vue-p5 @sketch=\"sketch\"></vue-p5>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueP5 from \"vue-p5\";\r\nexport default {\r\n  name: \"p5-example\",\r\n  components: {\r\n    \"vue-p5\": VueP5\r\n  },\r\n  data: () => ({\r\n    red: 255,\r\n    green: 0,\r\n    blue: 0,\r\n    lines: [],\r\n    backgroundImage: null\r\n  }),\r\n  methods: {\r\n    sketch(sketch) {\r\n      sketch.draw = () => {\r\n        this.blue = (this.blue + 3) % 255;\r\n        const { red, green, blue } = this;\r\n        sketch.background(red, green, blue);\r\n      };\r\n    },\r\n    preload(sketch) {\r\n      this.backgroundImage = sketch.loadImage(\"../../assets/logo.png\");\r\n    },\r\n    setup(sketch) {\r\n      sketch.createCanvas(400, 400);\r\n    },\r\n    draw(sketch) {\r\n      const { width, height } = sketch;\r\n      sketch.image(this.backgroundImage, 0, 0, 0.5 * width, 0.5 * height);\r\n      for (let line of this.lines) {\r\n        sketch.stroke(line.color);\r\n        sketch.line(line.pmouseX, line.pmouseY, line.mouseX, line.mouseY);\r\n      }\r\n    },\r\n    keyPressed({ keyCode }) {\r\n      // 'g' key\r\n      if (keyCode === 71) {\r\n        this.toggleGreen();\r\n      }\r\n    },\r\n    mouseMoved({ mouseX, mouseY, pmouseX, pmouseY }) {\r\n      this.pushLine({ mouseX, mouseY, pmouseX, pmouseY, color: 0 });\r\n    },\r\n    mouseDragged({ mouseX, mouseY, pmouseX, pmouseY }) {\r\n      this.pushLine({ mouseX, mouseY, pmouseX, pmouseY, color: 255 });\r\n    },\r\n    toggleRed() {\r\n      this.red = 255 - this.red;\r\n    },\r\n    toggleGreen() {\r\n      this.green = 255 - this.green;\r\n    },\r\n    pushLine(line) {\r\n      let lines = this.lines;\r\n      lines.push(line);\r\n      this.lines = lines.slice(-100);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  @import './node_modules/bootstrap/scss/bootstrap.scss';\r\n \r\n</style>\r\n"],"sourceRoot":"src\\views"}]}